[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
let g:UltiSnipsSnippetDirectories=['~/.cache/dein/repos/github.com/honza/vim-snippets/UltiSnips', 'UltiSnips']

" snippet 次へ
let g:UltiSnipsJumpForwardTrigger="<tab>"
" snippet 前へ
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]]
repo =  'w0rp/ale'
hook_add = '''
" ALEのLSP機能無効(LSPはcoc.nvimを使用)
let g:ale_disable_lsp = 1
" ファイルタイプが変更された時のチェックをオフにする.
let g:ale_lint_on_filetype_changed = 0
" バッファの保存時にチェックする.
let g:ale_lint_on_text_changed = 'never'
" ファイルを開いた時のチェックを無くす.
let g:ale_lint_on_enter = 0
" ファイルがエラーもしくは警告を含むなら loclist で表示する.
let g:ale_open_list = 1
" 次・前のエラーへジャンプ
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]                                    
repo = 'tpope/vim-fugitive'
hook_add = '''                                    
    nnoremap <silent> gs :Gstatus<CR><C-w>T                                    
    nnoremap <silent> gps :Gpush<CR>                                    
    nnoremap <silent> gpl :Gpull<CR>                                    
'''   

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = '''
  augroup vimfiler
    autocmd!
    autocmd FileType vimfiler call s:vimfiler_settings()
  augroup END

  function! s:vimfiler_settings()
    nnoremap <silent><buffer><expr> s vimfiler#do_switch_action('split')
    nnoremap <silent><buffer><expr> v vimfiler#do_switch_action('vsplit')
  endfunction

  let g:vimfiler_as_default_explorer=1
  let g:vimfiler_safe_mode_by_default = 0
  let g:vimfiler_tree_leaf_icon = " "
  let g:vimfiler_tree_opened_icon = ' '
  let g:vimfiler_tree_closed_icon = ' '
  let g:vimfiler_file_icon = '- '
  let g:vimfiler_marked_file_icon = '✓ '
  let g:vimfiler_readonly_file_icon = '✗ '
  let g:vimfiler_ignore_pattern = '^\%(.git\|.DS_Store\)$'

  nnoremap fi :VimFilerBufferDir<CR>
  nnoremap fe :VimFilerExplorer  -split -winwidth=35 -toggle -no-quit<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['/vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
  set laststatus=2
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_idx_mode = 1
  let g:airline#extensions#whitespace#mixed_indent_algo = 1
  let g:airline_theme = 'bubblegum'
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'junegunn/fzf'
build_on = '''
./install -all
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'kana/vim-repeat'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_i = 1

[[plugins]]
repo  = 'mattn/emmet-vim'
on_ft = ['css','html']

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup = 1
    let g:indent_guides_color_change_percent = 1
    let g:indent_guides_guide_size = 1
    let g:indent_guides_start_level = 2
    let g:indent_guides_auto_colors = 0
    let g:indent_guides_exclude_filetypes = ['help', 'vimfiler']
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=237  guibg=#3a3a3a
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=242  guibg=#6c6c6c 
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = ['<Plug>(openbrowser-smart-search)']

[[plugins]]
repo = 'markonm/traces.vim'

